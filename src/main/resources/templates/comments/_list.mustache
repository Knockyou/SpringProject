<!--카드뷰-->
<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}

                <!-- Button trigger modal -->
                <button type="button"
                        class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"

                        data-bs-id="{{id}}"
                        data-bs-nickname="{{nickname}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{{articleId}}">Update</button>

                <button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn"
                data-comment-id={{id}}>Delete</button>

                <!-- Modal -->
                <div class="modal fade" id="comment-edit-modal" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title fs-5" id="exampleModalLabel">Modal title</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>

                            <div class="modal-body">
                                <form>
                                    <div class="mb-3"> <!--닉네임 입력란-->
                                        <label class="form-label">Nickname</label>
                                        <input type="text" class="form-control" id="edit-comment-nickname">
                                    </div>
                                    <div class="mb-3"> <!--댓글 입력란-->
                                        <label class="form-label">Comment body</label>
                                        <textarea type="text" class="form-control" rows="3" id="edit-comment-body"></textarea>
                                    </div>
                                    {{#article}}
                                        <input type="hidden" id="edit-comment-article-id" value="{{id}}">
                                        <input type="hidden" id="edit-comment-id" value="{{id}}">
                                    {{/article}}
                                    <button type="button" class="btn btn-primary" id="comment-update-btn">Update Success</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-body">
                {{body}}
            </div>
        </div>

    {{/commentDtos}}
</div>

<script>
{
    const commentEditModal = document.querySelector("#comment-edit-modal") //모달의 요소

    if(commentEditModal){
        // show.bs.modal -> 모달이 열렸리기 직전 실행 되는것
        commentEditModal.addEventListener("show.bs.modal", function(event){
        // 버튼을 선택하고
        const triggerBtn = event.relatedTarget; // 트리거 버튼이 됨

        // 데이터 가져오고
        const id = triggerBtn.getAttribute("data-bs-id");
        const nickname = triggerBtn.getAttribute("data-bs-nickname");
        const body = triggerBtn.getAttribute("data-bs-body");
        const articleId = triggerBtn.getAttribute("data-bs-article-id");

        // 폼에 수정 데이터 반영
        document.querySelector("#edit-comment-nickname").value = nickname;
        document.querySelector("#edit-comment-body").value = body;
        document.querySelector("#edit-comment-id").value = id;
        document.querySelector("#edit-comment-article-id").value = articleId;
        });
    }
}
{
    const commentUpdateBtn = document.querySelector("#comment-update-btn");

    if(commentUpdateBtn){
        commentUpdateBtn.addEventListener("click", function(){
            const comment = {
                id: document.querySelector("#edit-comment-id").value,
                nickname:document.querySelector("#edit-comment-nickname").value,
                body:document.querySelector("#edit-comment-body").value,
                article_id:document.querySelector("#edit-comment-article-id").value
            };

            const url = "/api/comments/" + comment.id;
            fetch(url, {
                method : "PATCH",
                headers:{
                    "Content-Type" : "application/json"
                },
                body:JSON.stringify(comment)
            }).then(response =>{
                const msg = (response.ok) ? "댓글 수정 성공!" : "댓글 수정 실패!";
                alert(msg);
                window.location.reload();
            });
        });
    }
}
</script>

<script>
{
    const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");
    commentDeleteBtns.forEach(btn => {
            btn.addEventListener("click", (event) => {
            const commentDeleteBtn = event.target; // 삭제 버튼을 변수로 처리
            const commentId = commentDeleteBtn.getAttribute("data-comment-id");
            //console.log(`댓글 삭제 - ${commentId}번 댓글`); //백틱을 사용
            //console.log("댓글 삭제 - " + commentId + "번 댓글");

            //const url = "/api/comments/" + commentId;
            const url = `/api/comments/${commentId}`;
            fetch(url, {
                method : "DELETE"
            }).then(response => {
                if(!response.ok){
                    alert("댓글 삭제에 실패 했습니다.");
                    return;
                }
                const msg = `${commentId} 댓글을 삭제 하셨습니다`;
                alert(msg);
                window.location.reload();
            });
        });
    });

    /*commentDeleteBtn.addEventListener("click", function(){
        console.log("삭제 버튼 클릭 했음");
    });*/
}
</script>
